/**************************************************************************
 *                                                                        *
 *  Simple OpenGL (SGL)                                                   *
 *  A simplified, threaded C++ wrapper for OpenGL and GLUT                *
 *  Version 1.x                                                           *
 *  ----------------------------------------------------------            *
 *  Copyright (C) 2018  Subhrajit Bhattacharya                            *
 *                                                                        *
 *  This program is free software: you can redistribute it and/or modify  *
 *  it under the terms of the GNU General Public License as published by  *
 *  the Free Software Foundation, either version 3 of the License, or     *
 *  (at your option) any later version.                                   *
 *                                                                        *
 *  This program is distributed in the hope that it will be useful,       *
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *  GNU General Public License for more details                           *
 *  <http://www.gnu.org/licenses/>                                        *
 *                                                                        *
 *                                                                        *
 *  Contact: subhrajit@gmail.com, http://subhrajit.net/                   *
 *                                                                        *
 *                                                                        *
 **************************************************************************/

#ifndef _SGL_GL_PROPERTIES_ICC
#define _SGL_GL_PROPERTIES_ICC

#include <vector>
#include <GL/freeglut.h>


static std::vector<GLenum> light_names = {GL_LIGHT0, GL_LIGHT1, GL_LIGHT2, GL_LIGHT3, GL_LIGHT4, GL_LIGHT5};

class sglLight {
public:
    std::vector<GLfloat> ambient;
    std::vector<GLfloat> diffuse;
    std::vector<GLfloat> specular;
    
    std::vector<GLfloat> position;
    std::vector<GLfloat> spot_direction;
    
    sglLight 
    ( std::vector<GLfloat> la={0.0,0.0,0.0,1.0},  std::vector<GLfloat> ld={0.5,0.5,0.5,1.0}, std::vector<GLfloat> ls={0.8,0.8,0.8,1.0},
      std::vector<GLfloat> lpos={0.0,0.0,-5.0,0.0} )
        : ambient(la), diffuse(ld), specular(ls), position(lpos) { }
};


#endif
